install.packages("rmarkdown")
install.packages("reticulate")
library('reticulate')
install.packages("prettydoc")
library('prettydoc')
setwd("/media/sf_DATA/Stage_UM-ISEM/Stage/Suivi du travail effectué/Website")
setwd("/media/sf_DATA/Stage_UM-ISEM/Stage/Suivi du travail effectué/Website")
install.packages("rmarkdown")
knitr::opts_chunk$set(echo = TRUE)
# From CRAN
install.packages("SimRAD")
FASTA.file <- " path to fasta file"
ref.DNAseq <- ref.DNAseq(FASTA.file, subselect.contigs = TRUE, prop.contigs = 0.1)
# From Bioconductor
source("https://bioconductor.org/biocLite.R")
biocLite("Biostrings")
biocLite("ShortRead")
biocLite("zlibbioc")
# From CRAN
install.packages("SimRAD")
library("SimRAD")
FASTA.file <- "/home/elise.gueret/labrax.fa"
ref.DNAseq <- ref.DNAseq(FASTA.file, subselect.contigs = TRUE, prop.contigs = 0.1)
# PstI
cs_5p1 <- "CTGCA"
cs_3p1 <- "G"
# MseI
cs_5p2 <- "T"
cs_3p2 <- "TAA"
simseq.dig1 <- insilico.digest(ref.DNAseq, cs_5p1, cs_3p1, cs_5p2, cs_3p2, verbose=TRUE)
# EcoRI
cs_5p3 <- "G"
cs_3p3 <- "AATTC"
# MspI
cs_5p4 <- "C"
cs_3p4 <- "CGG"
simseq.dig2 <- insilico.digest(ref.DNAseq, cs_5p3, cs_3p3, cs_5p4, cs_3p4, verbose=TRUE)
# EcoRI
cs_5p5 <- "G"
cs_3p5 <- "AATTC"
# MseI
cs_5p6 <- "T"
cs_3p6 <- "TAA"
simseq.dig3 <- insilico.digest(ref.DNAseq, cs_5p5, cs_3p5, cs_5p6, cs_3p6, verbose=TRUE)
simseq.seli <- adapt.select(simseq.dig1, type="AB+BA", cs_5p1, cs_3p1, cs_5p2, cs_3p2)
View(simseq.seli)
simseq.sel1 <- adapt.select(simseq.dig1, type="AB+BA", cs_5p1, cs_3p1, cs_5p2, cs_3p2)
wid.simseq1 <- size.select(simseq.sel, min.size = 200, max.size = 400, graph=TRUE, verbose=TRUE)
wid.simseq1 <- size.select(simseq.sel1, min.size = 200, max.size = 400, graph=TRUE, verbose=TRUE)
nar.simseq1 <- size.select(simseq.sel1, min.size = 210, max.size = 260, graph=TRUE, verbose=TRUE)
boxplot(list(width(simseq.sel), width(wid.simseq), width(nar.simseq)), names=c("All fragments",
"Wide size selection", "Narrow size selection"), ylab="Locus size (bp)")
boxplot(list(width(simseq.sel1), width(wid.simseq1), width(nar.simseq1)), names=c("All fragments",
"Wide size selection", "Narrow size selection"), ylab="Locus size (bp)")
simseq.sel2 <- adapt.select(simseq.dig2, type="AB+BA", cs_5p3, cs_3p3, cs_5p4, cs_3p4)
wid.simseq2 <- size.select(simseq.sel2, min.size = 200, max.size = 400, graph=TRUE, verbose=TRUE)
nar.simseq2 <- size.select(simseq.sel2, min.size = 210, max.size = 260, graph=TRUE, verbose=TRUE)
boxplot(list(width(simseq.sel2), width(wid.simseq2), width(nar.simseq2)), names=c("All fragments",
"Wide size selection", "Narrow size selection"), ylab="Locus size (bp)")
simseq.sel3 <- adapt.select(simseq.dig3, type="AB+BA", cs_5p3, cs_3p3, cs_5p2, cs_3p2)
wid.simseq3 <- size.select(simseq.sel3, min.size = 200, max.size = 400, graph=TRUE, verbose=TRUE)
nar.simseq3 <- size.select(simseq.sel3, min.size = 210, max.size = 260, graph=TRUE, verbose=TRUE)
boxplot(list(width(simseq.sel3), width(wid.simseq3), width(nar.simseq3)), names=c("All fragments",
"Wide size selection", "Narrow size selection"), ylab="Locus size (bp)")
simseq.dig4 <- insilico.digest(ref.DNAseq, cs_5p3, cs_3p3, cs_5p1, cs_3p1, verbose=TRUE)
simseq.sel4 <- adapt.select(simseq.dig4, type="AB+BA", cs_5p3, cs_3p3, cs_5p1, cs_3p1)
wid.simseq4 <- size.select(simseq.sel4, min.size = 200, max.size = 400, graph=TRUE, verbose=TRUE)
nar.simseq4 <- size.select(simseq.sel4, min.size = 210, max.size = 260, graph=TRUE, verbose=TRUE)
boxplot(list(width(simseq.sel4), width(wid.simseq4), width(nar.simseq4)), names=c("All fragments",
"Wide size selection", "Narrow size selection"), ylab="Locus size (bp)")
