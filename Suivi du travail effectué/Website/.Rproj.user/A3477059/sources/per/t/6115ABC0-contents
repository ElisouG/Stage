---
title: "Scripts"
output:
   html_document: 
    fig_caption: yes
    highlight: zenburn
    theme: cerulean
    toc: yes
    toc_depth: 5
    toc_float: yes
---

* * * * *

Quelques explications sur mes scripts : 

* * * * *

# GATK : Découverte de Variants à partir de données de RNA-seq

Voici les bonnes pratiques pour faire de la découverte de variants à partir de données de RNA-seq :
![Source : https://software.broadinstitute.org/gatk/documentation/article?id=4067](BPDV.png)

<p style="text-align:justify";>Comme mentionné ci-dessus on ne peut pas filtrer les variants par la méthode de VSQR pour le moment. Cette méthode utilise du machine learning pour filtrer les données. Elle s'adapte donc aux données qu'on lui donne. Il faut donc passer par du "hard-filtering". C'est-à-dire un filtre sur critère strict, défini comme des recommendations par l'équipe qui développe GATK. Les recommandations générales de l'équipe de GATK sont mentionnées [ici](https://software.broadinstitute.org/gatk/documentation/article.php?id=3225). 
Dans cet article ils mentionnent différents seuils pour différents type de filtres à appliquer. Ceux qu'ils proposent sont les suivants : </p>

| Sigle du filtre utilisé | Valeur si SNPs | Valeur si INDELs |
| :---------------------: | :------------: | :--------------: |
| QD | <2.0 | <2.0 |
| FS | >60.0 | >200.0 |
| ReadPosRankSum | <-8.0 | <20.0 |
| MQ | <40.0 |   |
| MQRankSum | <-12.5 |   |
| SOR | >3.0 | >10.0 |
| InbreedingCoeff |   | <-0.8 |

Définition des filtres utilisés pour le "hard-filtering":  

* **Quality by depth (QD)** : 
    + Overview : This annotation puts the variant confidence QUAL score into perspective by normalizing for the amount of coverage available. Because each read contributes a little to the QUAL score, variants in regions with deep coverage can have artificially inflated QUAL scores, giving the impression that the call is supported by more evidence than it really is. To compensate for this, we normalize the variant confidence by depth, which gives us a more objective picture of how well supported the call is.
    + Statistical note : The QD is the QUAL score normalized by allele depth (AD) for a variant. For a single sample, the HaplotypeCaller calculates the QD by taking QUAL/AD. For multiple samples, HaplotypeCaller and GenotypeGVCFs calculate the QD by taking QUAL/AD of samples with a non hom-ref genotype call. The reason we leave out the samples with a hom-ref call is to not penalize the QUAL for the other samples with the variant call.
    + Caveats : This annotation can only be calculated for sites for which at least one sample was genotyped as carrying a variant allele.   

* **FisherStrand bias estimated using Fischer's exact test (FS)** :    
    + Overview : Strand bias is a type of sequencing bias in which one DNA strand is favored over the other, which can result in incorrect evaluation of the amount of evidence observed for one allele vs. the other. The FisherStrand annotation is one of several methods that aims to evaluate whether there is strand bias in the data. It uses Fisher's Exact Test to determine if there is strand bias between forward and reverse strands for the reference or alternate allele. The output is a Phred-scaled p-value. The higher the output value, the more likely there is to be bias. More bias is indicative of false positive calls.    
    + Statistical note : See the [method document on Fischer's exact Test](https://software.broadinstitute.org/gatk/documentation/article.php?id=8056) for a more detail explanation of this application.   
    + Caveats : The FisherStrand test may not be calculated for certain complex indel cases or for multi-allelic sites.
FisherStrand is best suited for low coverage situations. For testing strand bias in higher coverage situations, see the StrandOddsRatio annotation.    

* **StrandOddsRatio (SOR)** :
    + This is another way to estimate strand bias using a test similar to the symmetric odds ratio test. SOR was created because FS tends to penalize variants that occur at the ends of exons. Reads at the ends of exons tend to only be covered by reads in one direction and FS gives those variants a bad score. SOR will take into account the ratios of reads that cover both alleles.    

* **RMSMappingQuality Root Mean Square of the mapping quality of reads across all samples (MQ)** :
    + Overview : This annotation provides an estimation of the overall mapping quality of reads supporting a variant call. It produce both raw data (sum of square and num of total reads) and the calculated root mean square. The raw data is used to accurately calculate the root mean square when combining more than one sample.    
    + Statistical note : The root mean square is equivalent to the mean of the mapping qualities plus the standard deviation of the mapping qualities.
    + Caveat : Uninformative reads are not used in this annotation.   
  
* **MappingQualityRankSum Rank Sum Test for mapping qualities of REF versus ALT reads (MQRankSum)**:
    + Overview : his variant-level annotation compares the mapping qualities of the reads supporting the reference allele with those supporting the alternate allele. The ideal result is a value close to zero, which indicates there is little to no difference. A negative value indicates that the reads supporting the alternate allele have lower mapping quality scores than those supporting the reference allele. Conversely, a positive value indicates that the reads supporting the alternate allele have higher mapping quality scores than those supporting the reference allele. This annotation can be used to evaluate confidence in a variant call and is a recommended covariate for variant recalibration (VQSR). Finding a statistically significant difference in quality either way suggests that the sequencing and/or mapping process may have been biased or affected by an artifact. In practice, we only filter out low negative values when evaluating variant quality because the idea is to filter out variants for which the quality of the data supporting the alternate allele is comparatively low. The reverse case, where it is the quality of data supporting the reference allele that is lower (resulting in positive ranksum scores), is not really informative for filtering variants.    
    + Statistical note : The value output for this annotation is the u-based z-approximation from the Mann-Whitney-Wilcoxon Rank Sum Test for mapping qualities (MAPQ of reads supporting REF vs. MAPQ of reads supporting ALT). See the method document on statistical tests for a more detailed explanation of the ranksum test.   
    + Caveat : The mapping quality rank sum test can not be calculated for sites without a mixture of reads showing both the reference and alternate alleles. AND Uninformative reads are not used in these annotations.     

* **ReadPosRankSum Rank Sum Test for relative positioning of REF versus ALT alleles within reads (ReadPosRankSum)** : 
    + Overview : This variant-level annotation tests whether there is evidence of bias in the position of alleles within the reads that support them, between the reference and alternate alleles.
Seeing an allele only near the ends of reads is indicative of error, because that is where sequencers tend to make the most errors. However, some variants located near the edges of sequenced regions will necessarily be covered by the ends of reads, so we can't just set an absolute "minimum distance from end of read" threshold. That is why we use a rank sum test to evaluate whether there is a difference in how well the reference allele and the alternate allele are supported.
The ideal result is a value close to zero, which indicates there is little to no difference in where the alleles are found relative to the ends of reads. A negative value indicates that the alternate allele is found at the ends of reads more often than the reference allele. Conversely, a positive value indicates that the reference allele is found at the ends of reads more often than the alternate allele.
This annotation can be used to evaluate confidence in a variant call and is a recommended covariate for variant recalibration (VQSR). Finding a statistically significant difference in relative position either way suggests that the sequencing process may have been biased or affected by an artifact. In practice, we only filter out low negative values when evaluating variant quality because the idea is to filter out variants for which the quality of the data supporting the alternate allele is comparatively low. The reverse case, where it is the quality of data supporting the reference allele that is lower (resulting in positive ranksum scores), is not really informative for filtering variants.
    + Statistical note : The value output for this annotation is the u-based z-approximation from the Mann-Whitney-Wilcoxon Rank Sum Test for site position within reads (position within reads supporting REF vs. position within reads supporting ALT). See the [method document on RankSum Test](https://software.broadinstitute.org/gatk/documentation/article.php?id=8031) for a more detail explanation of this test.
    + Caveat : The read position rank sum test can not be calculated for sites without a mixture of reads showing both the reference and alternate alleles. Uninformative reads are not used in these annotations.

  
  
<p style="text-align:justify";>Sur [cette page](https://software.broadinstitute.org/gatk/documentation/article?id=6925), ils présentent différents graphiques avec leur données et expliquent pourquoi ils ont choisis ces différents seuils.
Ensuite il ne reste plus qu'à appliquer ces filtres aux données selon les recommendations [suivantes](https://software.broadinstitute.org/gatk/documentation/article.php?id=2806).</p>

# Python : Correction du fichier d'annotation de *Dicentrarchus labrax*